{"version":3,"sources":["../webpack/bootstrap","background/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","console","log"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,qBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,kBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,IAIjBlC,EAAoBA,EAAoBmC,EAAI,I,mBClFrDC,QAAQC,IAAI","file":"static/js/background.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 22);\n","console.log('background page');\n\n// import API from \"@/api\";\n// import chromeUtils from \"@/utils/chromeUtils\";\n// import localStorageUtils from \"@/utils/localStorageUtils\";\n// import { LoginDataRes } from \"@/types/login\";\n// import { ChromeEventType } from \"@/types/background\";\n\n// const autoLogin = async (): Promise<void> => {\n//   const token = localStorageUtils.getToken();\n//   const loginRes = await API.login(\"\", \"\", token);\n//   console.log(\"@@@@@ auto login res : \", loginRes);\n//   const { code, data } = loginRes || {};\n//   if (code === 0) {\n//     const { token, email } = data as LoginDataRes;\n//     localStorageUtils.setToken(token);\n//     localStorageUtils.setEmail(email);\n//   } else {\n//     localStorageUtils.setToken(\"\");\n//   }\n// };\n\n// // change事件只返回改变的id\n// const onBookmarksChanged = async (\n//   id: string,\n//   changeInfo: any\n// ): Promise<void> => {\n//   console.log(\"@@@@ changeData\", id, changeInfo);\n//   if (changeInfo) {\n//     const data = { ...changeInfo, id };\n//     API.uploadBookmark(JSON.stringify(data), ChromeEventType.Change);\n//   }\n// };\n\n// const onCreated = async (id: string, bookmarkNode: any): Promise<void> => {\n//   console.log(\"onCreated ---- \", id, bookmarkNode);\n//   if (bookmarkNode) {\n//     API.uploadBookmark(JSON.stringify(bookmarkNode), ChromeEventType.Created);\n//   }\n// };\n\n// const onImportEnded = async (): Promise<void> => {\n//   const bookmark = await chromeUtils.getTree();\n//   if (bookmark) {\n//     API.uploadBookmark(JSON.stringify(bookmark), ChromeEventType.AllTree);\n//   }\n// };\n\n// const onMoved = async (id: string, moveInfo: any): Promise<void> => {\n//   console.log(\"onMoved ---- \", id, moveInfo);\n//   if (moveInfo) {\n//     let node = await chromeUtils.get(id);\n//     if (Array.isArray(node) && node[0]) {\n//       node = node[0];\n//     }\n//     const data = { id, moveInfo, node };\n//     API.uploadBookmark(JSON.stringify(data), ChromeEventType.Moved);\n//   }\n// };\n\n// const onRemoved = async (id: string, removeInfo: any): Promise<void> => {\n//   console.log(\"onRemoved ---- \", id, removeInfo);\n//   if (id) {\n//     const data = { ...removeInfo, id };\n//     API.uploadBookmark(JSON.stringify(data), ChromeEventType.Removed);\n//   }\n// };\n\n// chrome.bookmarks.onChanged.addListener(onBookmarksChanged);\n// // TODO 啥子？\n// // chrome.bookmarks.onChildrenReordered.addListener(onBookmarksChanged);\n// chrome.bookmarks.onCreated.addListener(onCreated);\n// // chrome.bookmarks.onImportBegan.addListener(bookmarksChangeCallback);\n// chrome.bookmarks.onImportEnded.addListener(onImportEnded);\n// chrome.bookmarks.onMoved.addListener(onMoved);\n// chrome.bookmarks.onRemoved.addListener(onRemoved);\n\n// // 当书签或者书签夹发生改变时触发该事件。注意: 近期只有标题和url发生改变时，才触发该事件\n// // chrome.bookmarks.onChanged.addListener(function (id, changeInfo) {});\n\n// // 由于UI中的顺序发生改变时，书签夹会改变其子节点的顺序，此时会触发该事件。函数 move()不会触发该事件。\n// // chrome.bookmarks.onChildrenReordered.addListener(function (id, reorderInfo) {});\n\n// // 当创建书签或者书签夹夹时，会触发该事件。\n// // chrome.bookmarks.onCreated.addListener(function (id, bookmark) {});\n\n// // 当开始导入书签时，会触发该事件 。\n// // 事件响应者在导入结束前不要处理标签创建、更新的事件。但仍然可以立即处理其他事件。\n// // chrome.bookmarks.onImportBegan.addListener(function () {});\n\n// // 当导入书签结束时，会触发该事件 。\n// // chrome.bookmarks.onImportEnded.addListener(function () {});\n\n// // 当书签或者书签夹被移动到其他父书签夹时，触发该事件。\n// // chrome.bookmarks.onMoved.addListener(function (id, moveInfo) {});\n\n// // 当书签和书签夹被删除时，触发该事件。\n// // 当递归删除书签夹时，只会触发一个节点删除事件，它的子节点不会触发节点删除事件。\n// // chrome.bookmarks.onRemoved.addListener(function (id, removeInfo) {});\n\n// /* ******************************************************************* */\n\n// /*global chrome*/\n// chrome.runtime.onInstalled.addListener(function () {\n//   console.log(\"@@@@@@@@@ onInstalled\");\n//   autoLogin();\n//   chrome.declarativeContent.onPageChanged.removeRules(undefined, function () {\n//     chrome.declarativeContent.onPageChanged.addRules([\n//       {\n//         // 运行插件运行的页面URL规则\n//         conditions: [\n//           new chrome.declarativeContent.PageStateMatcher({ pageUrl: {} }),\n//         ],\n//         actions: [new window.chrome.declarativeContent.ShowPageAction()],\n//       },\n//     ]);\n//   });\n// });\n\n// chrome.runtime.onMessage.addListener(function (request, sender, sendResponse) {\n//   // 接受来自content-script的消息，requset里不允许传递function类型的参数\n//   chrome.tabs.query({ currentWindow: true, active: true }, function (tabs) {\n//     const { contentRequest } = request;\n//     // 接收来自content的api请求\n//     if (contentRequest === \"apiRequest\") {\n//       let { config } = request;\n//       // API请求成功的回调\n//       config.success = (data: any) => {\n//         data.result = \"succ\";\n//         sendResponse(data);\n//       };\n//       // API请求失败的回调\n//       config.fail = (msg: any) => {\n//         sendResponse({\n//           result: \"fail\",\n//           msg,\n//         });\n//       };\n//       // 发起请求\n//       // apiRequest(config);\n//     }\n//   });\n//   return true;\n// });\n"],"sourceRoot":""}